{"remainingRequest":"/Users/imranrasheed/Documents/wor_on_demand_fonrtend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/imranrasheed/Documents/wor_on_demand_fonrtend/src/views/table/bs-table/serviceProviders/list_service_providers.vue?vue&type=template&id=64cf6b97&","dependencies":[{"path":"/Users/imranrasheed/Documents/wor_on_demand_fonrtend/src/views/table/bs-table/serviceProviders/list_service_providers.vue","mtime":1666106444868},{"path":"/Users/imranrasheed/Documents/wor_on_demand_fonrtend/node_modules/cache-loader/dist/cjs.js","mtime":1658911406000},{"path":"/Users/imranrasheed/Documents/wor_on_demand_fonrtend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1658911432000},{"path":"/Users/imranrasheed/Documents/wor_on_demand_fonrtend/node_modules/cache-loader/dist/cjs.js","mtime":1658911406000},{"path":"/Users/imranrasheed/Documents/wor_on_demand_fonrtend/node_modules/vue-loader/lib/index.js","mtime":1658911432000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}