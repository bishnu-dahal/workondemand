{"remainingRequest":"/Users/apple/Documents/VS Code/wor_on_demand_fonrtend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/Documents/VS Code/wor_on_demand_fonrtend/src/views/table/bs-table/bookings/update_booking.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/apple/Documents/VS Code/wor_on_demand_fonrtend/src/views/table/bs-table/bookings/update_booking.vue","mtime":1680782538543},{"path":"/Users/apple/Documents/VS Code/wor_on_demand_fonrtend/node_modules/css-loader/dist/cjs.js","mtime":1658911432000},{"path":"/Users/apple/Documents/VS Code/wor_on_demand_fonrtend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1658911432000},{"path":"/Users/apple/Documents/VS Code/wor_on_demand_fonrtend/node_modules/postcss-loader/src/index.js","mtime":1658911432000},{"path":"/Users/apple/Documents/VS Code/wor_on_demand_fonrtend/node_modules/cache-loader/dist/cjs.js","mtime":1658911406000},{"path":"/Users/apple/Documents/VS Code/wor_on_demand_fonrtend/node_modules/vue-loader/lib/index.js","mtime":1658911432000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKdGV4dGFyZWEgewogIHJlc2l6ZTogdmVydGljYWw7Cn0KaW5wdXRbdHlwZT0ibnVtYmVyIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sCmlucHV0W3R5cGU9Im51bWJlciJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHsKICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7CiAgbWFyZ2luOiAwOwp9Ci5ocl9kaXZpZGVyIHsKICBib3JkZXItYm90dG9tOiAycHggc29saWQgIzgyODY4YjsKfQo="},{"version":3,"sources":["update_booking.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"update_booking.vue","sourceRoot":"src/views/table/bs-table/bookings","sourcesContent":["<template>\n    <b-form @submit.prevent>\n      <b-row>\n\n        <b-col md=\"6\">\n            <b-form-group\n              label=\"Service Provider\"\n              label-for=\"autosuggest__input\"\n            >\n              <vue-autosuggest\n                v-model=\"formValues.serviceProviderSearch\"\n                :suggestions=\"serviceProviderfilteredOptions\"\n                :limit=\"10\"\n                :input-props=\"{\n                  id: 'autosuggest__input',\n                  class: 'form-control',\n                  placeholder: 'Search with name or ID',\n                }\"\n                @input=\"onInputChange(formValues)\"\n                @selected=\"assignServiceProviderField(formValues, $event)\"\n              >\n                <template slot-scope=\"{ suggestion }\">\n                  <span class=\"my-suggestion-item\">{{ suggestion.item.name }}, {{ suggestion.item.id }}\n                  </span>\n                </template>\n              </vue-autosuggest>\n            </b-form-group>\n          </b-col>\n          <b-col md=\"6\">\n            <b-form-group\n              label=\"User\"\n              label-for=\"autosuggest__input\"\n            >\n              <vue-autosuggest\n                v-model=\"formValues.userSearch\"\n                :suggestions=\"usersfilteredOptions\"\n                :limit=\"10\"\n                :input-props=\"{\n                  id: 'autosuggest__input',\n                  class: 'form-control',\n                  placeholder: 'Search with name or ID',\n                }\"\n                @input=\"onInputChangeUser(formValues)\"\n                @selected=\"assignUserField(formValues, $event)\"\n              >\n                <template slot-scope=\"{ suggestion }\">\n                  <span class=\"my-suggestion-item\">{{ suggestion.item.name }}, {{ suggestion.item.id }}\n                  </span>\n                </template>\n              </vue-autosuggest>\n            </b-form-group>\n          </b-col>\n\n          <b-col md=\"6\">\n            <b-form-group\n              label=\"Service\"\n              label-for=\"autosuggest__input\"\n            >\n              <vue-autosuggest\n                v-model=\"formValues.userSearch\"\n                :suggestions=\"usersfilteredOptions\"\n                :limit=\"10\"\n                :input-props=\"{\n                  id: 'autosuggest__input',\n                  class: 'form-control',\n                  placeholder: 'Search with Service Name',\n                }\"\n                @input=\"onInputChangeUser(formValues)\"\n                @selected=\"assignUserField(formValues, $event)\"\n              >\n                <template slot-scope=\"{ suggestion }\">\n                  <span class=\"my-suggestion-item\">{{ suggestion.item.name }}, {{ suggestion.item.id }}\n                  </span>\n                </template>\n              </vue-autosuggest>\n            </b-form-group>\n          </b-col>\n  \n        <b-col md=\"6\">\n          <b-form-group\n            label=\"Title\"\n            label-for=\"v-title\"\n          >\n            <b-form-input\n              id=\"v-title'\"\n              v-model=\"formValues.title\"\n            />\n          </b-form-group>\n        </b-col>\n  \n        <!-- submit and reset -->\n        <b-col md=\"12\">\n          <b-button\n            v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n            type=\"submit\"\n            variant=\"primary\"\n            class=\"mr-1\"\n            :disabled=\"isSubmitting\"\n            @click=\"imageUpload\"\n          >\n            <b-spinner\n              v-if=\"isSubmitting\"\n              small\n            />\n            <span v-if=\"isSubmitting\">Please Wait</span>\n  \n            <span v-if=\"!isSubmitting\">Submit</span>\n          </b-button>\n        </b-col>\n      </b-row>\n    </b-form>\n  </template>\n  \n  <script>\n  import {\n    BRow,\n    BCol,\n    BFormGroup,\n    BFormInput,\n    BFormCheckbox,\n    BForm,\n    BButton,\n    BFormDatepicker,\n    BCard,\n    BSpinner,\n    BFormFile,\n    BFormTextarea,\n    BInputGroupAppend,\n    BInputGroup,\n  } from 'bootstrap-vue'\n  import Ripple from 'vue-ripple-directive'\n  import axios from '@axios'\n  import { heightTransition } from '@core/mixins/ui/transition'\n  import ToastificationContent from '@core/components/toastification/ToastificationContent.vue'\n  import { VueAutosuggest } from 'vue-autosuggest'\n  import Cleave from 'vue-cleave-component'\n  \n  export default {\n    components: {\n      BRow,\n      BCol,\n      BFormGroup,\n      BFormInput,\n      BFormCheckbox,\n      BForm,\n      BButton,\n      BFormDatepicker,\n      BCard,\n      BSpinner,\n      BFormFile,\n      BFormTextarea,\n      BInputGroupAppend,\n      Cleave,\n      BInputGroup,\n      VueAutosuggest,\n    },\n    directives: {\n      Ripple,\n    },\n  \n    mixins: [heightTransition],\n  \n    data() {\n      return {\n        options: {\n          date: {\n            date: true,\n            delimiter: '-',\n            datePattern: ['Y', 'm', 'd'],\n          },\n        },\n  \n        isSubmitting: false,\n        serviceProviderfilteredOptions: [],\n        usersfilteredOptions: [],\n        formValues: {\n          title: '',\n          image: '',\n          color: '',\n        },\n  \n      }\n    },\n    mounted() {\n      this.initTrHeight()\n    },\n    created() {\n      window.addEventListener('resize', this.initTrHeight)\n    },\n    destroyed() {\n      window.removeEventListener('resize', this.initTrHeight)\n    },\n    methods: {\n      Submit() {\n        this.isSubmitting = true\n        console.log('submit', this.formValues)\n  \n        axios\n          .post('/categories/add_categories', this.formValues)\n          .then(response => {\n            if (response.data.hasOwnProperty('success')) {\n              if (response.data.success === true) {\n                console.log(response.data.data)\n  \n                this.$router.replace('/categories').then(() => {\n                  this.$toast({\n                    component: ToastificationContent,\n                    position: 'top-right',\n                    props: {\n                      title: response.data.message,\n                      icon: 'EditIcon',\n                      variant: 'success',\n                    },\n                  })\n                })\n              } else {\n                this.isSubmitting = false\n  \n                this.$toast({\n                  component: ToastificationContent,\n                  position: 'top-right',\n                  props: {\n                    title: response.data.message,\n                    icon: 'AlertCircleIcon',\n                    variant: 'danger',\n                  },\n                })\n              }\n            } else {\n              this.isSubmitting = false\n  \n              this.$toast({\n                component: ToastificationContent,\n                position: 'top-right',\n                props: {\n                  title: 'Error',\n                  icon: 'AlertCircleIcon',\n                  variant: 'danger',\n                  text: 'Something went wrong, try again later',\n                },\n              })\n            }\n          })\n          .catch(error => {\n            console.error(error)\n          })\n      },\n      imageChange(e) {\n        this.file = e.target.files[0]\n      },\n      imageUpload() {\n        const formData = new FormData()\n        formData.append('image', this.file)\n        console.log(formData)\n        axios\n          .post('/categories/uploadFile', formData)\n          .then(response => {\n            if (response.data.hasOwnProperty('success')) {\n              if (response.data.success === true) {\n                this.formValues.image = response.data.filePATH\n                this.Submit()\n                console.log('image Url', this.formValues.image)\n                this.$toast({\n                  component: ToastificationContent,\n                  position: 'top-right',\n                  props: {\n                    title: response.data.message,\n                    icon: 'EditIcon',\n                    variant: 'success',\n                  },\n                })\n              } else {\n                this.isSubmitting = false\n  \n                this.$toast({\n                  component: ToastificationContent,\n                  position: 'top-right',\n                  props: {\n                    title: response.data.message,\n                    icon: 'AlertCircleIcon',\n                    variant: 'danger',\n                  },\n                })\n              }\n            } else {\n              this.isSubmitting = false\n  \n              this.$toast({\n                component: ToastificationContent,\n                position: 'top-right',\n                props: {\n                  title: 'Error',\n                  icon: 'AlertCircleIcon',\n                  variant: 'danger',\n                  text: 'Something went wrong, try again later',\n                },\n              })\n            }\n          })\n          .catch(error => {\n            console.error(error)\n          })\n      },\n      onInputChange(item) {\n      const text = item.serviceProviderSearch\n      if (text === '' || text === undefined) {\n        return\n      }\n      axios\n        .get(`serviceProvider/getServiceProviderDropdown/${item.serviceProviderSearch}`)\n        .then(response => {\n          if (response.data.hasOwnProperty('success')) {\n            if (response.data.success === true) {\n              console.log(response.data.data)\n              this.serviceProviderfilteredOptions = [\n                {\n                  data: response.data.data,\n                },\n              ]\n              console.log('item', item)\n            } else {\n              this.$toast({\n                component: ToastificationContent,\n                position: 'top-right',\n                props: {\n                  title: 'Error',\n                  icon: 'AlertCircleIcon',\n                  variant: 'danger',\n                  text: response.data.message,\n                },\n              })\n            }\n          } else {\n            this.$toast({\n              component: ToastificationContent,\n              position: 'top-right',\n              props: {\n                title: 'Error',\n                icon: 'AlertCircleIcon',\n                variant: 'danger',\n                text: 'Something went wrong, try again later',\n              },\n            })\n          }\n        })\n        .catch(error => {\n          console.error(error)\n        })\n    },\n\n    onInputChangeUser(item) {\n      const text = item.userSearch\n      if (text === '' || text === undefined) {\n        return\n      }\n      axios\n        .get(`users/usersDropdown/${item.userSearch}`)\n        .then(response => {\n          if (response.data.hasOwnProperty('success')) {\n            if (response.data.success === true) {\n              console.log(response.data.data)\n              this.usersfilteredOptions = [\n                {\n                  data: response.data.data,\n                },\n              ]\n              console.log('item', item)\n            } else {\n              this.$toast({\n                component: ToastificationContent,\n                position: 'top-right',\n                props: {\n                  title: 'Error',\n                  icon: 'AlertCircleIcon',\n                  variant: 'danger',\n                  text: response.data.message,\n                },\n              })\n            }\n          } else {\n            this.$toast({\n              component: ToastificationContent,\n              position: 'top-right',\n              props: {\n                title: 'Error',\n                icon: 'AlertCircleIcon',\n                variant: 'danger',\n                text: 'Something went wrong, try again later',\n              },\n            })\n          }\n        })\n        .catch(error => {\n          console.error(error)\n        })\n    },\n      assignServiceProviderField(item, event) {\n      console.log('name', event.item)\n      item.service_provider_id = event.item.id\n      item.serviceProviderSearch = event.item.name\n      },\n      assignUserField(item, event) {\n      console.log('name', event.item)\n      item.user_id = event.item.id\n      item.userSearch = event.item.name\n      },\n      initTrHeight() {\n        this.trSetHeight(null)\n        this.$nextTick(() => {\n          // this.trSetHeight(this.$refs.form.scrollHeight);\n        })\n      },\n    },\n  }\n  </script>\n  \n  <style>\n  textarea {\n    resize: vertical;\n  }\n  input[type=\"number\"]::-webkit-inner-spin-button,\n  input[type=\"number\"]::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n  .hr_divider {\n    border-bottom: 2px solid #82868b;\n  }\n  </style>\n  <style lang=\"scss\">\n  @import \"@core/scss/vue/libs/vue-autosuggest.scss\";\n  </style>\n  "]}]}