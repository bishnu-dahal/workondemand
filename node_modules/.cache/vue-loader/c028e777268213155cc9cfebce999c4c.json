{"remainingRequest":"/Users/apple/Documents/VS Code/wor_on_demand_fonrtend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/Documents/VS Code/wor_on_demand_fonrtend/src/views/table/bs-table/global/globalSettings.vue?vue&type=style&index=1&lang=scss&","dependencies":[{"path":"/Users/apple/Documents/VS Code/wor_on_demand_fonrtend/src/views/table/bs-table/global/globalSettings.vue","mtime":1677235540919},{"path":"/Users/apple/Documents/VS Code/wor_on_demand_fonrtend/node_modules/css-loader/dist/cjs.js","mtime":1658911432000},{"path":"/Users/apple/Documents/VS Code/wor_on_demand_fonrtend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1658911432000},{"path":"/Users/apple/Documents/VS Code/wor_on_demand_fonrtend/node_modules/postcss-loader/src/index.js","mtime":1658911432000},{"path":"/Users/apple/Documents/VS Code/wor_on_demand_fonrtend/node_modules/sass-loader/dist/cjs.js","mtime":1658911444000},{"path":"/Users/apple/Documents/VS Code/wor_on_demand_fonrtend/node_modules/cache-loader/dist/cjs.js","mtime":1658911406000},{"path":"/Users/apple/Documents/VS Code/wor_on_demand_fonrtend/node_modules/vue-loader/lib/index.js","mtime":1658911432000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAiQGNvcmUvc2Nzcy92dWUvbGlicy92dWUtYXV0b3N1Z2dlc3Quc2NzcyI7Cg=="},{"version":3,"sources":["globalSettings.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2QA","file":"globalSettings.vue","sourceRoot":"src/views/table/bs-table/global","sourcesContent":["<template>\n  <b-form @submit.prevent>\n    <b-row>\n\n      <b-col md=\"6\">\n        <b-form-group\n          label=\"Service Fee\"\n          label-for=\"v-service_fee\"\n        >\n          <b-form-input\n            id=\"v-service_fee'\"\n            v-model=\"formValues.service_fee\"\n          />\n        </b-form-group>\n        \n      </b-col>\n\n      <b-col md=\"6\">\n        <b-form-group\n          label=\"Chatwoot Account Id\"\n          label-for=\"v-chatwoot_account_id\"\n        >\n          <b-form-input\n            id=\"v-chatwoot_account_id'\"\n            v-model=\"formValues.chatwoot_account_id\"\n          />\n        </b-form-group>\n        \n      </b-col>\n\n      <b-col md=\"6\">\n        <b-form-group\n          label=\"Chatwoot Inbox Id\"\n          label-for=\"v-chatwoot_inbox_id\"\n        >\n          <b-form-input\n            id=\"v-chatwoot_inbox_id'\"\n            v-model=\"formValues.chatwoot_inbox_id\"\n          />\n        </b-form-group>\n        \n      </b-col>\n\n      <b-col md=\"6\">\n        <b-form-group\n          label=\"Stripe Public Key\"\n          label-for=\"v-stripe_publish_key\"\n        >\n          <b-form-input\n            id=\"v-service_fee'\"\n            v-model=\"formValues.stripe_publish_key\"\n          />\n        </b-form-group>\n        \n      </b-col>\n\n      <b-col md=\"6\">\n        <b-form-group\n          label=\"Stripe Secret Key\"\n          label-for=\"v-stripe_secret_key\"\n        >\n          <b-form-input\n            id=\"v-service_fee'\"\n            v-model=\"formValues.stripe_secret_key\"\n          />\n        </b-form-group>\n        \n      </b-col>\n      <!-- submit and reset -->\n      <b-col md=\"12\">\n        <b-button\n          v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n          type=\"submit\"\n          variant=\"primary\"\n          class=\"mr-1\"\n          :disabled=\"isSubmitting\"\n          @click=\"Submit\"\n        >\n          <b-spinner\n            v-if=\"isSubmitting\"\n            small\n          />\n          <span v-if=\"isSubmitting\">Please Wait</span>\n\n          <span v-if=\"!isSubmitting\">Submit</span>\n        </b-button>\n      </b-col>\n    </b-row>\n  </b-form>\n</template>\n\n<script>\nimport {\n  BRow,\n  BCol,\n  BFormGroup,\n  BFormInput,\n  BFormCheckbox,\n  BForm,\n  BButton,\n  BFormDatepicker,\n  BFormTimepicker,\n  BCard,\n  BSpinner,\n  BFormFile,\n  BFormTextarea,\n  BInputGroupAppend,\n  BInputGroup,\n} from 'bootstrap-vue'\nimport Ripple from 'vue-ripple-directive'\nimport vSelect from 'vue-select'\nimport axios from '@axios'\nimport { heightTransition } from '@core/mixins/ui/transition'\nimport ToastificationContent from '@core/components/toastification/ToastificationContent.vue'\nimport { VueAutosuggest } from 'vue-autosuggest'\n\nimport Cleave from 'vue-cleave-component'\nimport 'cleave.js/dist/addons/cleave-phone.us'\nimport axiosIns from '@/libs/axios'\n\nexport default {\n  components: {\n    BRow,\n    BCol,\n    BFormGroup,\n    BFormInput,\n    BFormCheckbox,\n    BForm,\n    BButton,\n    BFormDatepicker,\n    BCard,\n    BSpinner,\n    BFormFile,\n    BFormTextarea,\n    BInputGroupAppend,\n    Cleave,\n    BInputGroup,\n    BFormTimepicker,\n\n  },\n  directives: {\n    Ripple,\n  },\n\n  mixins: [heightTransition],\n\n  data() {\n    return {\n      options: {\n        date: {\n          date: true,\n          delimiter: '-',\n          datePattern: ['Y', 'm', 'd'],\n        },\n      },\n\n      isSubmitting: false,\n\n      formValues: {\n        id: '',\n        service_fee: '',\n        chatwoot_account_id: '',\n        chatwoot_inbox_id: '',\n        stripe_publish_key: '',\n        stripe_secret_key: '',\n      },\n    }\n  },\n  mounted() {\n    this.initTrHeight()\n    this.getSettings()\n  },\n  created() {\n    window.addEventListener('resize', this.initTrHeight)\n  },\n  destroyed() {\n    window.removeEventListener('resize', this.initTrHeight)\n  },\n  methods: {\n    Submit() {\n      this.isSubmitting = true\n      console.log('submit', this.formValues)\n\n      axios\n        .post(`globalSettings/update_payment_gateways/${this.formValues.id}`, this.formValues)\n        .then(response => {\n          if (response.data.hasOwnProperty('success')) {\n            if (response.data.success === true) {\n              console.log(response.data.data)\n\n              this.$router.replace('/dashboard/ecommerce').then(() => {\n                this.$toast({\n                  component: ToastificationContent,\n                  position: 'top-right',\n                  props: {\n                    title: response.data.message,\n                    icon: 'EditIcon',\n                    variant: 'success',\n                  },\n                })\n              })\n            } else {\n              this.isSubmitting = false\n\n              this.$toast({\n                component: ToastificationContent,\n                position: 'top-right',\n                props: {\n                  title: response.data.message,\n                  icon: 'AlertCircleIcon',\n                  variant: 'danger',\n                },\n              })\n            }\n          } else {\n            this.isSubmitting = false\n\n            this.$toast({\n              component: ToastificationContent,\n              position: 'top-right',\n              props: {\n                title: 'Error',\n                icon: 'AlertCircleIcon',\n                variant: 'danger',\n                text: 'Something went wrong, try again later',\n              },\n            })\n          }\n        })\n        .catch(error => {\n          console.error(error)\n        })\n    },\n    getSettings() {\n      axios.get('globalSettings/get_global_seeting/').then(response => {\n        console.log(response.data)\n        this.formValues = response.data.data\n        this.initTrHeight()\n        console.log('Category Fetched')\n      }).catch(error => {\n        console.error(error)\n      })\n    },\n    initTrHeight() {\n      this.trSetHeight(null)\n      this.$nextTick(() => {\n        // this.trSetHeight(this.$refs.form.scrollHeight);\n      })\n    },\n  },\n}\n</script>\n\n<style>\ntextarea {\n  resize: vertical;\n}\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n.hr_divider {\n  border-bottom: 2px solid #82868b;\n}\n</style>\n<style lang=\"scss\">\n@import \"@core/scss/vue/libs/vue-autosuggest.scss\";\n</style>\n"]}]}