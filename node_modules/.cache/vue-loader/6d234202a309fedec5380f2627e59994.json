{"remainingRequest":"/Users/imranrasheed/Documents/wor_on_demand_fonrtend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/imranrasheed/Documents/wor_on_demand_fonrtend/src/views/table/bs-table/agency/list_agency.vue?vue&type=template&id=4d65dc2e&","dependencies":[{"path":"/Users/imranrasheed/Documents/wor_on_demand_fonrtend/src/views/table/bs-table/agency/list_agency.vue","mtime":1674050762316},{"path":"/Users/imranrasheed/Documents/wor_on_demand_fonrtend/node_modules/cache-loader/dist/cjs.js","mtime":1658911406000},{"path":"/Users/imranrasheed/Documents/wor_on_demand_fonrtend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1658911432000},{"path":"/Users/imranrasheed/Documents/wor_on_demand_fonrtend/node_modules/cache-loader/dist/cjs.js","mtime":1658911406000},{"path":"/Users/imranrasheed/Documents/wor_on_demand_fonrtend/node_modules/vue-loader/lib/index.js","mtime":1658911432000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}