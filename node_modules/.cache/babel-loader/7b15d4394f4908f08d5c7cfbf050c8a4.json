{"remainingRequest":"/Users/apple/Documents/VS Code/wor_on_demand_fonrtend/node_modules/babel-loader/lib/index.js!/Users/apple/Documents/VS Code/wor_on_demand_fonrtend/src/@core/auth/jwt/jwtService.js","dependencies":[{"path":"/Users/apple/Documents/VS Code/wor_on_demand_fonrtend/src/@core/auth/jwt/jwtService.js","mtime":1660206765000},{"path":"/Users/apple/Documents/VS Code/wor_on_demand_fonrtend/node_modules/cache-loader/dist/cjs.js","mtime":1658911406000},{"path":"/Users/apple/Documents/VS Code/wor_on_demand_fonrtend/node_modules/babel-loader/lib/index.js","mtime":1658911406000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/apple/Documents/VS Code/wor_on_demand_fonrtend/src/@core/auth/jwt/jwtService.js"],"names":["Vue","initialAbility","router","axios","jwtDefaultConfig","JwtService","axiosIns","jwtOverrideConfig","jwtConfig","interceptors","request","use","config","accessToken","getToken","headers","Authorization","tokenType","error","Promise","reject","response","originalRequest","isAlreadyFetchingAccessToken","refreshToken","then","r","setToken","data","access_token","setRefreshToken","onAccessTokenFetched","status","localStorage","removeItem","storageTokenKeyName","storageRefreshTokenKeyName","$router","push","name","subscribers","filter","callback","getItem","value","setItem","args","post","loginEndpoint","abilities","action","subject","$ability","update","registerEndpoint","refreshEndpoint","getRefreshToken"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport { initialAbility } from '@/libs/acl/config'\nimport router from '@/router'\nimport axios from 'axios'\nimport jwtDefaultConfig from './jwtDefaultConfig'\n\nexport default class JwtService {\n  // Will be used by this service for making API calls\n  axiosIns = null\n\n  // jwtConfig <= Will be used by this service\n  jwtConfig = { ...jwtDefaultConfig }\n\n  // For Refreshing Token\n  isAlreadyFetchingAccessToken = false\n\n  // For Refreshing Token\n  subscribers = []\n\n  constructor(axiosIns, jwtOverrideConfig) {\n    this.axiosIns = axiosIns\n    this.jwtConfig = { ...this.jwtConfig, ...jwtOverrideConfig }\n\n    // Request Interceptor\n    this.axiosIns.interceptors.request.use(\n      config => {\n        // Get token from localStorage\n        const accessToken = this.getToken()\n\n        // If token is present add it to request's Authorization Header\n        if (accessToken) {\n          // eslint-disable-next-line no-param-reassign\n          config.headers.Authorization = `${this.jwtConfig.tokenType} ${accessToken}`\n          // config.headers.Content-Type = `multipart/form-data`\n        }\n        return config\n      },\n      error => Promise.reject(error),\n    )\n\n    // Add request/response interceptor\n    this.axiosIns.interceptors.response.use(\n      response => response,\n      error => {\n        // const { config, response: { status } } = error\n        const { config, response } = error\n        const originalRequest = config\n\n        if (!this.isAlreadyFetchingAccessToken) {\n          this.isAlreadyFetchingAccessToken = true\n          this.refreshToken().then(r => {\n            this.isAlreadyFetchingAccessToken = false\n\n            // Update accessToken in localStorage\n            this.setToken(r.data.access_token)\n            this.setRefreshToken(r.data.access_token)\n\n            this.onAccessTokenFetched(r.data.access_token)\n          })\n        }\n\n        // if (status === 401) {\n        if (response && response.status === 401) {\n          localStorage.removeItem(this.jwtConfig.storageTokenKeyName)\n          localStorage.removeItem(this.jwtConfig.storageRefreshTokenKeyName)\n\n          // Remove userData from localStorage\n          localStorage.removeItem('userData')\n\n          // Reset ability\n          // this.$ability.update(initialAbility)\n\n          // Redirect to login page\n          this.$router.push({ name: 'auth-login' })\n\n          /* const retryOriginalRequest = new Promise(resolve => {\n            this.addSubscriber(accessToken => {\n              // Make sure to assign accessToken according to your response.\n              // Check: https://pixinvent.ticksy.com/ticket/2413870\n              // Change Authorization header\n              originalRequest.headers.Authorization = `${this.jwtConfig.tokenType} ${accessToken}`\n              resolve(this.axiosIns(originalRequest))\n            })\n          })\n          return retryOriginalRequest */\n        }\n        return Promise.reject(error)\n      },\n    )\n  }\n\n  onAccessTokenFetched(accessToken) {\n    this.subscribers = this.subscribers.filter(callback => callback(accessToken))\n  }\n\n  addSubscriber(callback) {\n    this.subscribers.push(callback)\n  }\n\n  getToken() {\n    return localStorage.getItem(this.jwtConfig.storageTokenKeyName)\n  }\n\n  getRefreshToken() {\n    return localStorage.getItem(this.jwtConfig.storageRefreshTokenKeyName)\n  }\n\n  setToken(value) {\n    localStorage.setItem(this.jwtConfig.storageTokenKeyName, value)\n  }\n\n  setRefreshToken(value) {\n    localStorage.setItem(this.jwtConfig.storageRefreshTokenKeyName, value)\n  }\n\n  login(...args) {\n    return this.axiosIns.post(this.jwtConfig.loginEndpoint, ...args)\n  }\n\n  setPermissions() {\n    const abilities = [\n      {\n        action: 'manage',\n        subject: 'all',\n      },\n    ]\n    this.$ability.update(abilities)\n  }\n\n  register(...args) {\n    return this.axiosIns.post(this.jwtConfig.registerEndpoint, ...args)\n  }\n\n  refreshToken() {\n    return this.axiosIns.post(this.jwtConfig.refreshEndpoint, {\n      refreshToken: this.getRefreshToken(),\n    })\n  }\n}\n"]}]}